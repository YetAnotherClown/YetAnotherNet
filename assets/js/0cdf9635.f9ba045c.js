"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[687],{16887:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var n=r(74848),s=r(28453);const i={sidebar_position:4},d="Buffer Compression",l={id:"getting-started/buffer-compression",title:"Buffer Compression",description:"Hassle-free & Behind the Scenes",source:"@site/docs/getting-started/buffer-compression.mdx",sourceDirName:"getting-started",slug:"/getting-started/buffer-compression",permalink:"/YetAnotherNet/docs/getting-started/buffer-compression",draft:!1,unlisted:!1,editUrl:"https://github.com/YetAnotherClown/YetAnotherNet/edit/main/docs/getting-started/buffer-compression.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Hooks",permalink:"/YetAnotherNet/docs/getting-started/hooks"},next:{title:"Squash [Luau/TS]",permalink:"/YetAnotherNet/docs/even-more-compression/squash"}},a={},h=[{value:"Hassle-free &amp; Behind the Scenes",id:"hassle-free--behind-the-scenes",level:2},{value:"Get Even More Buffer Compression",id:"get-even-more-buffer-compression",level:2},{value:"Datatypes",id:"datatypes",level:2},{value:"Supported Datatypes",id:"supported-datatypes",level:3},{value:"Unsupported Datatypes",id:"unsupported-datatypes",level:3}];function c(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"buffer-compression",children:"Buffer Compression"}),"\n",(0,n.jsx)(t.h2,{id:"hassle-free--behind-the-scenes",children:"Hassle-free & Behind the Scenes"}),"\n",(0,n.jsx)(t.p,{children:"YetAnotherNet will work behind the scenes to automatically compress the data you send for you into Buffers.\r\nThe library features an internal Ser/Des library to serialize all Luau Datatypes and most Roblox Datatypes."}),"\n",(0,n.jsx)(t.p,{children:"What's great about this compression is that it requires almost no additional work from the user to use.\r\nAs long as you use all supported datatypes, YetAnotherNet will pack your data efficiently into buffers with no data-loss."}),"\n",(0,n.jsxs)(t.p,{children:["You can see the list of ",(0,n.jsx)(t.a,{href:"./buffer-compression#supported-datatypes",children:"Supported Datatypes"})," and ",(0,n.jsx)(t.a,{href:"./buffer-compression#unsupported-datatypes",children:"Unsupported Datatypes"})," on this page."]}),"\n",(0,n.jsx)(t.h2,{id:"get-even-more-buffer-compression",children:"Get Even More Buffer Compression"}),"\n",(0,n.jsx)(t.p,{children:"Hey! Did you know you could use Middleware to use libraries like Squash and Flamework Binary Serializer?"}),"\n",(0,n.jsxs)(t.p,{children:["You can compress your data even more by checking out ",(0,n.jsx)(t.a,{href:"../even-more-compression/squash",children:"Compression with Squash"})," and ",(0,n.jsx)(t.a,{href:"../even-more-compression/flamework-binary-serializer",children:"Compression with Flamework Binary Serializer"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"datatypes",children:"Datatypes"}),"\n",(0,n.jsx)(t.h3,{id:"supported-datatypes",children:"Supported Datatypes"}),"\n",(0,n.jsx)(t.p,{children:"The following Datatypes can be Serialized by YetAnotherNet, when using these Datatypes, your data\r\nwill be packed efficiently into a buffer."}),"\n",(0,n.jsx)(t.p,{children:"Keep in mind that the buffer will be compressed even further by Roblox, the sizes listed here are not\r\nthe sizes that will actually be sent over the network, the size sent may be lower."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Datatype"}),(0,n.jsx)(t.th,{children:"Bytes"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"array (table)"}),(0,n.jsx)(t.td,{children:"1-5 bytes per entry + size of value"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dictionary (table)"}),(0,n.jsx)(t.td,{children:"2-10 bytes per key-value pair + size of key and value"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"boolean"}),(0,n.jsx)(t.td,{children:"1"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"number"}),(0,n.jsx)(t.td,{children:"4"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"N/A"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"BrickColor"}),(0,n.jsx)(t.td,{children:"2"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"CFrame"}),(0,n.jsx)(t.td,{children:"48"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Color3"}),(0,n.jsx)(t.td,{children:"12"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DateTime"}),(0,n.jsx)(t.td,{children:"8"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"EnumItem"}),(0,n.jsx)(t.td,{children:"N/A"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Instance"}),(0,n.jsx)(t.td,{children:"4"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Rect"}),(0,n.jsx)(t.td,{children:"16"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Region3"}),(0,n.jsx)(t.td,{children:"60"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Region3int16"}),(0,n.jsx)(t.td,{children:"12"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"TweenInfo"}),(0,n.jsx)(t.td,{children:"25 + Size of EnumItems"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"UDim"}),(0,n.jsx)(t.td,{children:"8"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"UDim2"}),(0,n.jsx)(t.td,{children:"16"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Vector2"}),(0,n.jsx)(t.td,{children:"8"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Vector2int16"}),(0,n.jsx)(t.td,{children:"4"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Vector3"}),(0,n.jsx)(t.td,{children:"12"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Vector3int16"}),(0,n.jsx)(t.td,{children:"6"})]})]})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Datatypes last updated 04/15/2024, any datatypes added after this date are Unimplemented/Unknown."})}),"\n",(0,n.jsx)(t.p,{children:"If a Datatype not listed here is sent, it will cause the library to send a partially compressed payload\r\nover the network, you will lose out on some compression, but the loss will try to be minimized."}),"\n",(0,n.jsx)(t.h3,{id:"unsupported-datatypes",children:"Unsupported Datatypes"}),"\n",(0,n.jsx)(t.p,{children:"The following Datatypes are considered Unserializable, either because there is no way to properly\r\nserialize/deserialize them, or they have not been implemented."}),"\n",(0,n.jsx)(t.p,{children:"If it's unimplemented, you may request it be implemented or create a Pull Request to implement it yourself."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Datatype"}),(0,n.jsx)(t.th,{children:"Status"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Axes"}),(0,n.jsx)(t.td,{children:"Unimplemented: niche datatype"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"CatalogSearchParams"}),(0,n.jsx)(t.td,{children:"Unimplemented: niche datatype"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ColorSequence"}),(0,n.jsx)(t.td,{children:"Unimplemented: requires ColorSequenceKeypoint"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ColorSequenceKeypoint"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DockWidgetPluginGuiInfo"}),(0,n.jsx)(t.td,{children:"Unimplemented: niche datatype"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Faces"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"FloatCurveKey"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Font"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"function"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"NumberRange"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"NumberSequence"}),(0,n.jsx)(t.td,{children:"Unimplemented: requires NumberSequenceKeypoint"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"NumberSequenceKeypoint"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"OverlapParams"}),(0,n.jsx)(t.td,{children:"Unimplemented: niche datatype"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Path2DControlPoint"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"PathWaypoint"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"PhysicalProperties"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Random"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Ray"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"RaycastParams"}),(0,n.jsx)(t.td,{children:"Unimplemented: niche datatype"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"RaycastResult"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"RBXScriptConnection"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"RBXScriptSignal"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"RotationCurveKey"}),(0,n.jsx)(t.td,{children:"Unimplemented"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Secret"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"SharedTable"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"thread"}),(0,n.jsx)(t.td,{children:"Cannot Serialize/Deserialize"})]})]})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Datatypes last updated 04/12/2024, any datatypes added after this date are Unimplemented/Unknown."})}),"\n",(0,n.jsx)(t.p,{children:'Some additional things to know about the supported datatypes are that tables are treated as\r\ndictionaries and arrays. Arrays will always be cheaper than using a Dictionary, make sure that you\r\ndon\'t have any "holes" in your arrays, otherwise it will be serialized as an Dictionary.'})]})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>l});var n=r(96540);const s={},i=n.createContext(s);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);
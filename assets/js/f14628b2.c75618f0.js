"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[970],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=i(n),m=a,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(y,l(l({ref:t},c),{},{components:n})):r.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[d]="string"==typeof e?e:a,l[1]=u;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(87462),a=n(67294),o=n(86010),l=n(12466),u=n(16550),s=n(91980),i=n(67392),c=n(50012);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const r=(0,u.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=p(e),[l,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[s,i]=y({queryString:n,groupId:r}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),h=(()=>{const e=s??d;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&u(h)}),[h]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),f(e)}),[i,f,o]),tabValues:o}}var h=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:u,selectValue:s,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=i[n].value;r!==u&&(d(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},i.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},l,{className:(0,o.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":u===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=f(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},a.createElement(g,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return a.createElement(k,(0,r.Z)({key:String(t)},e))}},48755:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>u,metadata:()=>i,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),o=n(74866),l=n(85162);const u={sidebar_position:2},s="Matter",i={unversionedId:"setup/matter",id:"setup/matter",title:"Matter",description:"Check out the adapted version of the Matter Example game to see how it's used in a real game.",source:"@site/docs/setup/matter.mdx",sourceDirName:"setup",slug:"/setup/matter",permalink:"/YetAnotherNet/docs/setup/matter",draft:!1,editUrl:"https://github.com/YetAnotherClown/YetAnotherNet/edit/main/docs/setup/matter.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"ECR",permalink:"/YetAnotherNet/docs/setup/ecr"},next:{title:"Other Setups",permalink:"/YetAnotherNet/docs/setup/other"}},c={},d=[],p={toc:d},m="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"matter"},"Matter"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Check out the adapted version of the Matter Example game to see how it's used in a real game."),(0,a.kt)("p",{parentName:"admonition"},"See all of Net's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/YetAnotherClown/YetAnotherNet/tree/main/examples"},"example projects")," in the repository.")),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"lua",label:"Luau",default:!0,mdxType:"TabItem"},(0,a.kt)("p",null,"Being initially made for the Matter ECS, Net provides a simple function for scheduling your Routes to run on your Matter Loop."),(0,a.kt)("p",null,"Firstly, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"routes.luau")," ModuleScript in ReplicatedStorage to strictly declare your Routes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="routes.luau"',title:'"routes.luau"'},'local Net = require("Net.luau")\n\nlocal Route = Net.Route\ntype Route<U...> = Net.Route<U...>;\n\nlocal defaultConfiguration = {\n  Channel = "Reliable",\n  Event = "default",\n}\n\n-- Payload for replicating Entities\ntype EntityPayload = {\n    [string]: { -- EntityId\n        [string]: { -- Component name\n            data: ComponentInstance<T>\n        }\n    }\n}\n\n-- Replicate Matter Components\nlocal MatterReplication: Net<EntityPayload> = Net.new(defaultConfiguration)\n\n-- Signal that the Player has loaded\nlocal PlayerLoaded: Net<boolean> = Net.new(defaultConfiguration)\n\nreturn {\n  MatterReplication = MatterReplication,\n  PlayerLoaded = PlayerLoaded,\n}\n')),(0,a.kt)("p",null,"And now in the same script where you create your Matter Loop, you can run the ",(0,a.kt)("inlineCode",{parentName:"p"},"Net.start(Loop, { Net })"),"\nfunction to schedule your Routes to run on Matter's Middleware."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="init.server.luau / init.client.luau"',title:'"init.server.luau',"/":!0,'init.client.luau"':!0},'local Matter = require("Matter.luau")\nlocal World = Matter.World\nlocal Loop = Matter.Loop\n\nlocal Net = require("Net.luau")\nlocal routes = require("routes.luau")\n\nlocal world = World.new()\nlocal loop = Loop.new(world)\n\n-- Schedules your Routes\nNet.start(loop, routes)\n\nlocal systems = {}\nfor _, child in script.systems:GetChildren() do\n    if child:IsA("ModuleScript") then\n        table.insert(systems, require(child))\n    end\nend\n\nloop:scheduleSystems(systems) -- Schedule systems after running ``Net.start()``\n\n-- Begin the loop and make sure the ``Event`` key in your Routes configuration are added here\nloop:begin({\n    default = RunService.Heartbeat\n})\n')),(0,a.kt)("p",null,"Finally, in a Matter System we can use our ",(0,a.kt)("inlineCode",{parentName:"p"},"routes.luau")," ModuleScript to access our Routes and\nuse them within our Systems."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="systems/exampleSystem.luau"',title:'"systems/exampleSystem.luau"'},'local routes = require("routes.luau")\nlocal PlayerLoaded = routes.PlayerLoaded\n\nlocal function exampleSystem(world)\n    -- Query through every networking call that frame on the Server\n    for i, player, ...data in PlayerLoaded:query() do\n        -- Do something\n    end\n\n    -- Query through every networking call that frame on the Client\n    for i, _, ...data in PlayerLoaded:query() do\n        -- Do something\n    end\n\n    -- Send data from the Client to the Server\n    PlayerLoaded:send(...data)\n\n    -- Send data to a Client from the Server\n    PlayerLoaded:send(...data):to(Player)\nend\n'))),(0,a.kt)(l.Z,{value:"ts",label:"Typescript",mdxType:"TabItem"},(0,a.kt)("p",null,"Being initially made for the Matter ECS, Net provides a simple function for scheduling your Routes to run on your Matter Loop."),(0,a.kt)("p",null,"Firstly, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"routes.ts")," ModuleScript in ReplicatedStorage to strictly declare your Routes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="routes.ts"',title:'"routes.ts"'},'import { Route, Configuration } from "@rbxts/yetanothernet";\n\nconst defaultConfiguration: Configuration = {\n  Channel: "Reliable",\n  Event: "default",\n}\n\n// Replicate Matter Components\nconst MatterReplication = new Route(defaultConfiguration);\n\n// Signal that the Player has loaded\nconst PlayerLoaded: Route<[boolean]> = new Route(defaultConfiguration);\n\nexport = {\n  MatterReplication: MatterReplication,\n  PlayerLoaded: PlayerLoaded,\n}\n')),(0,a.kt)("p",null,"And now in the same script where you create your Matter Loop, you can run the ",(0,a.kt)("inlineCode",{parentName:"p"},"Net.start(Loop, { route: Route })"),"\nfunction to schedule your Routes to run on Matter's Middleware."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.server.ts / main.client.ts"',title:'"main.server.ts',"/":!0,'main.client.ts"':!0},'import { Loop } from "@rbxts/matter";\n\nimport Net from "@rbxts/yetanothernet";\nimport routes from "shared/routes";\n\nconst loop = new Loop();\n\n// Schedules your Routes\nNet.start(loop, routes)\n\n// Schedule systems\nconst systems = {}\nloop.scheduleSystems(systems)\n\n// Begin the loop and make sure the ``Event`` key in your Routes configuration are added here\nloop.begin({\n    default: RunService.Heartbeat\n})\n')),(0,a.kt)("p",null,"Finally, in a Matter System we can use our ",(0,a.kt)("inlineCode",{parentName:"p"},"routes.ts")," ModuleScript to access our Routes and\nuse them within our Systems."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="systems/exampleSystem.ts"',title:'"systems/exampleSystem.ts"'},'import routes from "shared/routes";\n\nconst PlayerLoaded = routes.PlayerLoaded\n\nfunction exampleSystem(world) {\n    // Query through every networking call that frame on the Server\n    for (const [pos, player, bool] of PlayerLoaded.query()) {\n        // Do something\n    }\n\n    // Query through every networking call that frame on the Client\n    for (const [pos, _, bool] of PlayerLoaded.query()) {\n        // Do something\n    }\n\n    // Send data from the Client to the Server\n    PlayerLoaded.send(true)\n\n    // Send data to a Client from the Server\n    PlayerLoaded.send(true):to(Player)\n}\n')))))}y.isMDXComponent=!0}}]);